@using KFZ_Konfigurator.Helper;
@using KFZ_Konfigurator.ViewModels;
@using KFZ_Konfigurator.Views;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ConfigurationViewKind viewKind = ConfigurationViewKind.ModelSelection;
    Type modelType = Model.GetType();
    if (modelType == typeof(EngineSettingsPageViewModel))
    {
        viewKind = ConfigurationViewKind.EngineSettings;
    }
    else if (modelType == typeof(AccessoriesPageViewModel))
    {
        viewKind = ConfigurationViewKind.Accessories;
    }
    else if (modelType == typeof(ExteriorPageViewModel))
    {
        viewKind = ConfigurationViewKind.Exterior;
    }
    else if (modelType == typeof(ConfigurationOverviewPageViewModel))
    {
        viewKind = ConfigurationViewKind.Overview;
    }

    bool isModelSelection = viewKind == ConfigurationViewKind.ModelSelection;
    string modelHeader = null;
    if (!isModelSelection)
    {
        var activeModel = SessionData.ActiveConfiguration.CarModel;
        if (activeModel == null)
        {
            throw new Exception("Model is not set");
        }
        modelHeader = $"{activeModel.Series} {activeModel.BodyType.ToString()} {activeModel.Year}";
    }

    //header carousel
    var headerImages = new List<(string image, ConfigurationViewKind? defaultViewKind)>
{
( "2018A4AngularFront.gif", ConfigurationViewKind.ModelSelection ),
( "2018A4Engine.gif" , ConfigurationViewKind.EngineSettings ),
( "2018A4Front.gif" , ConfigurationViewKind.Accessories ),
( "2018A4Side.gif" , ConfigurationViewKind.Exterior ),
( "2018A4AngularRear.gif", ConfigurationViewKind.Overview ),
( "2018A4Rear.gif", null ),
};

    var activeHeaderImage = headerImages.FirstOrDefault(cur => cur.defaultViewKind == viewKind).image ?? headerImages[0].image;
}

@Html.AntiForgeryToken()
@RenderBody()

@section ConfigurationHeader {
    <div class="bg-light">
        <div id="configurationHeaderCarousel" class="container text-overlap-container carousel slide" data-ride="carousel" data-interval="15000">
            <ol class="carousel-indicators dark">
                @foreach (var cur in headerImages)
                {
                    <li data-target="#configurationHeaderCarousel" data-slide-to="@headerImages.IndexOf(cur)"
                        class="@MiscHelper.If(cur.image == activeHeaderImage, "active")"></li>
                }
            </ol>
            <div class="carousel-inner">
                @foreach (var cur in headerImages)
                {
                    <div class="carousel-item @MiscHelper.If(cur.image == activeHeaderImage, "active")">
                        <img class="img-fluid" src="~/Resources/Images/@cur.image">
                    </div>
                }
            </div>
            @if (!isModelSelection)
            {
                <h3 class="overlap-top-left hidden-xs">@modelHeader</h3>
            }
        </div>
    </div>
    <div class="navbar bg-dark navbar-dark navbar-expand">
        <div class="container @MiscHelper.If(isModelSelection, "invisible")">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#configurationNavbarToggleContent">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse" id="configurationNavbarToggleContent">
                <div class="navbar-nav">
                    <a href="@Url.RouteUrl(Constants.Routes.EngineSettings)" class="nav-item nav-link @MiscHelper.If(viewKind == ConfigurationViewKind.EngineSettings, "active")">@LocalizationManager.Localize("ConfigurationLayout_EngineSettings_Button")</a>
                    <a href="@Url.RouteUrl(Constants.Routes.Accessories)" class="nav-item nav-link @MiscHelper.If(viewKind == ConfigurationViewKind.Accessories, "active")">@LocalizationManager.Localize("ConfigurationLayout_Accessories_Button")</a>
                    <a href="@Url.RouteUrl(Constants.Routes.Exterior)" class="nav-item nav-link @MiscHelper.If(viewKind == ConfigurationViewKind.Exterior, "active")">@LocalizationManager.Localize("ConfigurationLayout_Exterior_Button")</a>
                </div>
            </div>
        </div>
    </div>
}

@if (!isModelSelection)
{
    var activeModel = SessionData.ActiveConfiguration.CarModel;
    @section CartOverview {
        <div class="card rounded-0 container">
            <div class="card-body">
                <a href="@Url.RouteUrl(Constants.Routes.ModelOverview)" title="@LocalizationManager.Localize("ConfigurationLayout_GoToModelOverview")">
                    <h5 class="card-title">@modelHeader</h5>
                </a>
                <div class="card-text">
                    <strong v-if="selectedAccessories.length > 0">@LocalizationManager.Localize("ConfigurationLayout_Overview_Extras_Header"):</strong>
                    <div v-for="item in selectedAccessories">
                        <div>{{ item.name }}</div>
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_Overview_Paint_Header")</strong>: {{ selectedPaint.name }}
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_Overview_Rims_Header")</strong>: {{ selectedRims.size }} @LocalizationManager.Localize("General_RimSizeUnit")
                    </div>
                    <div class="mt-3">
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_BasePrice_Label")</strong>: {{ basePrice | formatCurrency }}
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_ExtrasPrice_Label")</strong>: {{ extrasPrice | formatCurrency }}
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_Price_Label")</strong>: {{ fullPrice | formatCurrency }}
                    </div>
                </div>
            </div>
            @if (viewKind != ConfigurationViewKind.Overview)
            {
                <a href="@Url.RouteUrl(Constants.Routes.CurrentConfigurationOverview)" class="btn btn-info row">@LocalizationManager.Localize("ConfigurationLayout_GoToOverview")</a>
            }
        </div>
    }
}

@section scripts {
    @RenderSection("scripts", required: false)
}