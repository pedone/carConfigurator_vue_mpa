@using KFZ_Konfigurator.Models;
@model KFZ_Konfigurator.ViewModels.ExteriorPageViewModel

@{
    Layout = "~/Views/Shared/_ConfigurationLayout.cshtml";
    ViewBag.Title = LocalizationManager.Localize("ExteriorView_Title");
}

<h2>@LocalizationManager.Localize("ExteriorView_Paints_Header")</h2>

<div class="container">
    @foreach (string curCategory in Model.PaintCategories)
    {
        var currentPaints = Model.Paints.Where(cur => cur.Category == curCategory).ToList();
        <div class="row mt-3">
            <h5>@(LocalizationManager.LocalizeCategory<PaintCategory>(curCategory)) (@Html.DisplayFor(_ => @currentPaints.First().Price))</h5>
        </div>
        <div class="row">
            @foreach (var item in currentPaints)
            {
                <div class="paintContainer" @@click="selectPaint(@item.Id)">
                    <input type="radio" name="paintOptions" value="@item.Id"
                           v-bind:class="{ checked: selectedPaintId === @item.Id }" />
                    <figure class="figure m-1">
                        <img style="background: @item.Color" class="border-0" />
                        <figcaption class="figure-caption">@Html.DisplayFor(_ => item.Name)</figcaption>
                    </figure>
                </div>
            }
        </div>
    }
</div>
<p />
<h2>@LocalizationManager.Localize("ExteriorView_Rims_Header")</h2>
<table class="table">
    @foreach (var item in Model.Rims)
    {
        <tr>
            <th>
                <input type="radio" name="rimOptions" class="mr-2" value="@item.Id" v-model="selectedRimsId" />
                <label>@Html.DisplayFor(_ => item.Size) @LocalizationManager.Localize("General_RimSizeUnit")</label>
            </th>
            <td>
                @Html.DisplayFor(_ => item.Price)
            </td>
        </tr>
    }
</table>

<div class="d-flex justify-content-end mt-3">
    <a class="btn btn-outline-dark" href="@Url.RouteUrl(Constants.Routes.CurrentConfigurationOverview)">@LocalizationManager.Localize("ExteriorView_ContinueToOverview_Button")</a>
</div>

@section scripts {
    @*@if (!HttpContext.Current.IsDebuggingEnabled)
    {
        @Scripts.Render("~/bundles/exterior")
    }*@
    <script type="module">
        import * as myBundle from '/Views/Exterior/Index.js';

        myBundle.vueMixins.push(myBundle.configurationViewModel.buildVueMixin(@Html.Raw(Json.Encode(Model))));
        $(window).on('beforeunload', () => myBundle.vueInstance.saveChanges());
    </script>
}